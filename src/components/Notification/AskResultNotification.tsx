import { useEffect, useState } from "react";
import { useSocket } from "@/hooks/useSocket";
import AlertModal from "../Modal/AlertModal";

interface AskResultNotificationProps {
  token: string;
}

export const AskResultNotification = ({
  token,
}: AskResultNotificationProps) => {
  const [isModalOpen, setIsModalOpen] = useState(false);

  const [status, setStatus] = useState<"APPROVE" | "REFUSED">();
  const socket = useSocket(token);

  useEffect(() => {
    if (!socket) return;

    // ÌÄòÏä§Ìä∏ Ïù¥Î≤§Ìä∏ ÏàòÏã† Ïãú ÏÉÅÌÉú ÏóÖÎç∞Ïù¥Ìä∏ Î∞è Î™®Îã¨ Ïó¥Í∏∞
    socket.on("ask-result", (status: "APPROVE" | "REFUSED") => {
      console.log("üì¨ ÏùëÎãµ Í≤∞Í≥º ÏàòÏã†:", status);
      setStatus(status);
      setIsModalOpen(true);
    });

    return () => {
      socket.off("ask-result");
    };
  }, [socket]);

  // Î™®Îã¨ ÏÉÅÌÉú Î≥ÄÍ≤Ω Î™®ÎãàÌÑ∞ÎßÅ
  useEffect(() => {}, [isModalOpen]);

  const handleConfirm = async () => {
    setIsModalOpen(false);
  };

  return (
    <>
      {status && (
        <AlertModal
          isOpen={isModalOpen}
          onClose={handleConfirm}
          onConfirm={handleConfirm}
          confirmText="ÏàòÎùΩ"
        >
          <div className="text-center">
            {status === "APPROVE" ? "Í≤∞Ï†ú ÏäπÏù∏" : "Í≤∞Ï†ú Í±∞Ï†à"}
          </div>
        </AlertModal>
      )}
    </>
  );
};
